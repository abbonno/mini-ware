[gd_scene load_steps=5 format=3 uid="uid://xcy1pul163hq"]

[ext_resource type="Script" path="res://scripts/level_manager.gd" id="1_l51yg"]
[ext_resource type="PackedScene" uid="uid://dcbrl5miuvflu" path="res://scenes/options.tscn" id="3_uur0k"]

[sub_resource type="Shader" id="Shader_hrn8m"]
code = "shader_type canvas_item;

uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear_mipmap;
uniform float time;
uniform float wave_intensity : hint_range(0.0, 0.05) = 0.005;
uniform float wave_frequency : hint_range(1.0, 30.0) = 8.0;
uniform float color_shift_intensity : hint_range(0.0, 2.0) = 0.3;
uniform float color_cycle_speed : hint_range(0.1, 5.0) = 1.0;
uniform float chromatic_aberration : hint_range(0.0, 0.02) = 0.002;

void fragment() {
    vec2 uv = UV;

    // Distorsión de ondas más sutil
    float wave_x = sin(uv.y * wave_frequency * 2.0 + time * 2.0) * wave_intensity;
    float wave_y = cos(uv.x * wave_frequency * 1.5 + time * 1.5) * wave_intensity;

    // Añadir un poco de movimiento circular
    float circular_wave = sin(length(uv - 0.5) * wave_frequency * 3.0 + time) * wave_intensity * 0.5;

    vec2 distorted_uv = uv + vec2(wave_x + circular_wave, wave_y + circular_wave);

    // Aberración cromática sutil
    vec4 col;
    col.r = texture(SCREEN_TEXTURE, distorted_uv + vec2(chromatic_aberration, 0.0)).r;
    col.g = texture(SCREEN_TEXTURE, distorted_uv).g;
    col.b = texture(SCREEN_TEXTURE, distorted_uv - vec2(chromatic_aberration, 0.0)).b;
    col.a = texture(SCREEN_TEXTURE, distorted_uv).a;

    // Modulación de color más suave
    float hue_shift = sin(time * color_cycle_speed) * color_shift_intensity;
    float sat_shift = cos(time * color_cycle_speed * 0.7) * color_shift_intensity * 0.5;

    // Aplicar shifts de color de forma más controlada
    col.r = col.r * (1.0 + hue_shift * sin(time * 0.8));
    col.g = col.g * (1.0 + hue_shift * cos(time * 1.2));
    col.b = col.b * (1.0 + hue_shift * sin(time * 0.5 + 1.57)); // +π/2 para desfase

    // Añadir un poco de saturación dinámica
    float avg = (col.r + col.g + col.b) / 3.0;
    col.rgb = mix(vec3(avg), col.rgb, 1.0 + sat_shift);

    COLOR = col;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_f87i4"]
shader = SubResource("Shader_hrn8m")
shader_parameter/time = null
shader_parameter/wave_intensity = 0.005
shader_parameter/wave_frequency = 8.0
shader_parameter/color_shift_intensity = 0.3
shader_parameter/color_cycle_speed = 1.0
shader_parameter/chromatic_aberration = 0.002

[node name="LevelManager" type="Node"]
script = ExtResource("1_l51yg")

[node name="UIContainer" type="Control" parent="."]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="VideoStreamPlayer" type="VideoStreamPlayer" parent="UIContainer"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
autoplay = true
expand = true

[node name="HealthContainer" type="HBoxContainer" parent="UIContainer"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -306.0
offset_top = -200.0
offset_right = 306.0
offset_bottom = -75.0
grow_horizontal = 2
grow_vertical = 0
alignment = 1

[node name="ScoreLabel" type="Label" parent="UIContainer"]
layout_mode = 1
anchors_preset = 5
anchor_left = 0.5
anchor_right = 0.5
offset_left = -75.0
offset_top = 30.0
offset_right = 75.0
offset_bottom = 180.0
grow_horizontal = 2
theme_override_font_sizes/font_size = 100
text = "..."
horizontal_alignment = 1
vertical_alignment = 1

[node name="PopupContainer" type="MarginContainer" parent="UIContainer"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -180.0
offset_top = -180.0
offset_right = 180.0
offset_bottom = 180.0
grow_horizontal = 2
grow_vertical = 2

[node name="MinigameContainer" type="Node2D" parent="."]

[node name="Timer" type="Timer" parent="."]
wait_time = 5.0
one_shot = true

[node name="TimeIndicatorContainer" type="CanvasLayer" parent="."]

[node name="TimeIndicatorSpriteContainer" type="MarginContainer" parent="TimeIndicatorContainer"]
custom_minimum_size = Vector2(900, 100)
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = -450.0
offset_top = -115.0
offset_right = 450.0
offset_bottom = -15.0
grow_horizontal = 2
grow_vertical = 0
size_flags_horizontal = 4
size_flags_vertical = 3

[node name="shaderEffects" type="ColorRect" parent="."]
visible = false
material = SubResource("ShaderMaterial_f87i4")
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Options" parent="." instance=ExtResource("3_uur0k")]
process_mode = 3
visible = false
